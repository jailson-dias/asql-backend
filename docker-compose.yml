version: '3.7'

services:
  mongo:
    image: mongo
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
    # ports:
    #   - "27017:27017"
    volumes:
      - mongodb:/data/db
    networks:
      - asql-network

  # postgres:
  #   image: postgres:alpine
  #   # environment:
  #   #   POSTGRES_USER: root
  #   #   POSTGRES_PASSWORD: mysecretpassword
  #   # ports:
  #   #   - "5432:5432"
  #   volumes:
  #     - postgresdb:/var/lib/postgresql/data
  #   networks:
  #     - asql-network

  auth:
    build: ./auth
    # environment:
    #   POSTGRES_USER: root
    #   POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "3000:3000"
    volumes:
      - ./auth:/app
      - /app/node_modules
    networks:
      - asql-network

  # kong-database:
  #   image: postgres:11-alpine
  #   restart: always
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", "kong"]
  #     interval: 30s
  #     timeout: 3s
  #     retries: 5
  #   # ports:
  #   #   - "5432:5432"
  #   environment:
  #     POSTGRES_USER: kong
  #     POSTGRES_DB: kong
  #     POSTGRES_PASSWORD: kong
  #     POSTGRES_HOST_AUTH_METHOD: trust
  #   networks:
  #     - asql-network

  # kong-migrations:
  #   image: kong:2.0.2-alpine
  #   command: "kong migrations bootstrap"
  #   restart: on-failure
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_DATABASE: kong
  #     KONG_PG_PASSWORD: kong
  #   depends_on:
  #     - kong-database
  #   networks:
  #     - asql-network

  # kong:
  #   image: kong:2.0.2-alpine
  #   restart: always
  #   ports:
  #     - "8000:8000"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://kong:8001"]
  #     interval: 30s
  #     timeout: 3s
  #     retries: 10
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-database
  #     KONG_PG_USER: kong
  #     KONG_PG_DATABASE: kong
  #     KONG_PG_PASSWORD: kong
  #     KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
  #     KONG_DB_UPDATE_FREQUENCY: 1m
  #   depends_on:
  #     - kong-database
  #     - kong-migrations
  #   networks:
  #     - asql-network

  # konga-prepare:
  #   image: pantsel/konga
  #   restart: on-failure
  #   command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga_db"
  #   depends_on:
  #     - kong-database
  #   networks:
  #     - asql-network

  # konga:
  #   image: pantsel/konga
  #   restart: always
  #   ports:
  #     - "1337:1337"
  #   environment:
  #     DB_ADAPTER: postgres
  #     DB_HOST: kong-database
  #     DB_USER: kong
  #     TOKEN_SECRET: token_secret
  #     DB_DATABASE: konga_db
  #     NODE_ENV: production
  #   depends_on:
  #     - kong-database
  #   networks:
  #     - asql-network

  # elasticsearch:
  #   image: elasticsearch:7.7.1
  #   # ports:
  #   #   - "9200:9200"
  #   #   - "9300:9300"
  #   environment:
  #     ES_JAVA_OPTS: "-Xmx256m -Xms256m"
  #     ELASTIC_PASSWORD: changeme
  #   volumes:
  #     - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
  #   networks:
  #     - asql-network

  # logstash:
  #   image: logstash:7.7.1
  #   # ports:
  #   #   - "5000:5000"
  #   #   - "9600:9600"
  #   environment:
  #     LS_JAVA_OPTS: "-Xmx256m -Xms256m"
  #   volumes:
  #     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
  #     - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - asql-network

  # kibana:
  #   image: kibana:7.7.1
  #   ports:
  #     - "5601:5601"
  #   volumes:
  #     - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - asql-network

  # consul-server-bootstrap:
  #   image: consul
  #   environment:
  #     CONSUL_DNS_PORT_NUMBER: "53"
  #     CONSUL_ALLOW_PRIVILEGED_PORT: ""
  #   networks:
  #     - asql-network

networks:
  asql-network:

volumes:
    mongodb:
    postgresdb:
